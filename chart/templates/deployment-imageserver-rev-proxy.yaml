apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iipimage.fullname" . }}-{{ .Chart.Name }}-rev-proxy
  labels:
    {{- include "iipimage.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "iipimage.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Chart.Name }}-rev-proxy
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "iipimage.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Chart.Name }}-rev-proxy
    spec:
      containers:
      - name: {{ .Chart.Name }}-rev-proxy
        image: {{ template "iipimage.imagename" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.application.command }}
        command:
{{- toYaml .Values.application.command | nindent 8 }}
{{- end }}
{{- if .Values.application.args }}
        args:
{{- toYaml .Values.application.args | nindent 8 }}
{{- end }}
        {{- if .Values.application.secretName }}
        envFrom:
        - secretRef:
            name: {{ .Values.application.secretName }}
{{- if .Values.extraEnvFrom }}
{{- toYaml .Values.extraEnvFrom | nindent 8 }}
{{- end }}
        {{- end }}
        env:
        - name: IIPSRV
          value: {{ include "iipimage.fullname" . }}-iipsrv
        - name: NODESRV
          value: {{ include "iipimage.fullname" . }}-node
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        tty: true
        volumeMounts:
        - mountPath: /mnt/data
          name: image-data
          subPath: {{ kindIs "string" .Values.persistence.imageStorageSubPath | ternary .Values.persistence.imageStorageSubPath .Release.Name | quote }}
        - mountPath: /var/tmp
          name: lighttpd-tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: image-data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.imageStoragePVC }}
      - emptyDir: {}
        name: lighttpd-tmp